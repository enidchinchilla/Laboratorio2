//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Laboratorio2.Website.SalesPersonService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SalesPersonService.ISalesPersonService")]
    public interface ISalesPersonService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesPersonService/GetSalesPersons", ReplyAction="http://tempuri.org/ISalesPersonService/GetSalesPersonsResponse")]
        Laboratorio2.DataAccess.PersonAddress[] GetSalesPersons(string city, string province, string country, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesPersonService/GetSalesPersons", ReplyAction="http://tempuri.org/ISalesPersonService/GetSalesPersonsResponse")]
        System.Threading.Tasks.Task<Laboratorio2.DataAccess.PersonAddress[]> GetSalesPersonsAsync(string city, string province, string country, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesPersonService/GetAddressesBySalesPersonID", ReplyAction="http://tempuri.org/ISalesPersonService/GetAddressesBySalesPersonIDResponse")]
        Laboratorio2.DataAccess.PersonAddress[] GetAddressesBySalesPersonID(int salesPersonID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesPersonService/GetAddressesBySalesPersonID", ReplyAction="http://tempuri.org/ISalesPersonService/GetAddressesBySalesPersonIDResponse")]
        System.Threading.Tasks.Task<Laboratorio2.DataAccess.PersonAddress[]> GetAddressesBySalesPersonIDAsync(int salesPersonID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISalesPersonServiceChannel : Laboratorio2.Website.SalesPersonService.ISalesPersonService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SalesPersonServiceClient : System.ServiceModel.ClientBase<Laboratorio2.Website.SalesPersonService.ISalesPersonService>, Laboratorio2.Website.SalesPersonService.ISalesPersonService {
        
        public SalesPersonServiceClient() {
        }
        
        public SalesPersonServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SalesPersonServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SalesPersonServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SalesPersonServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Laboratorio2.DataAccess.PersonAddress[] GetSalesPersons(string city, string province, string country, string name) {
            return base.Channel.GetSalesPersons(city, province, country, name);
        }
        
        public System.Threading.Tasks.Task<Laboratorio2.DataAccess.PersonAddress[]> GetSalesPersonsAsync(string city, string province, string country, string name) {
            return base.Channel.GetSalesPersonsAsync(city, province, country, name);
        }
        
        public Laboratorio2.DataAccess.PersonAddress[] GetAddressesBySalesPersonID(int salesPersonID) {
            return base.Channel.GetAddressesBySalesPersonID(salesPersonID);
        }
        
        public System.Threading.Tasks.Task<Laboratorio2.DataAccess.PersonAddress[]> GetAddressesBySalesPersonIDAsync(int salesPersonID) {
            return base.Channel.GetAddressesBySalesPersonIDAsync(salesPersonID);
        }
    }
}
