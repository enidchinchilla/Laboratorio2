//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Laboratorio2.Website.PersonService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PersonService.IPersonService")]
    public interface IPersonService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonService/GetPersons", ReplyAction="http://tempuri.org/IPersonService/GetPersonsResponse")]
        Laboratorio2.DataAccess.PersonAddress[] GetPersons(short type, string city, string province, string country, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonService/GetPersons", ReplyAction="http://tempuri.org/IPersonService/GetPersonsResponse")]
        System.Threading.Tasks.Task<Laboratorio2.DataAccess.PersonAddress[]> GetPersonsAsync(short type, string city, string province, string country, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonService/GetAddressesByPersonID", ReplyAction="http://tempuri.org/IPersonService/GetAddressesByPersonIDResponse")]
        Laboratorio2.DataAccess.PersonAddress[] GetAddressesByPersonID(int salesPersonID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonService/GetAddressesByPersonID", ReplyAction="http://tempuri.org/IPersonService/GetAddressesByPersonIDResponse")]
        System.Threading.Tasks.Task<Laboratorio2.DataAccess.PersonAddress[]> GetAddressesByPersonIDAsync(int salesPersonID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPersonServiceChannel : Laboratorio2.Website.PersonService.IPersonService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PersonServiceClient : System.ServiceModel.ClientBase<Laboratorio2.Website.PersonService.IPersonService>, Laboratorio2.Website.PersonService.IPersonService {
        
        public PersonServiceClient() {
        }
        
        public PersonServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PersonServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PersonServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PersonServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Laboratorio2.DataAccess.PersonAddress[] GetPersons(short type, string city, string province, string country, string name) {
            return base.Channel.GetPersons(type, city, province, country, name);
        }
        
        public System.Threading.Tasks.Task<Laboratorio2.DataAccess.PersonAddress[]> GetPersonsAsync(short type, string city, string province, string country, string name) {
            return base.Channel.GetPersonsAsync(type, city, province, country, name);
        }
        
        public Laboratorio2.DataAccess.PersonAddress[] GetAddressesByPersonID(int salesPersonID) {
            return base.Channel.GetAddressesByPersonID(salesPersonID);
        }
        
        public System.Threading.Tasks.Task<Laboratorio2.DataAccess.PersonAddress[]> GetAddressesByPersonIDAsync(int salesPersonID) {
            return base.Channel.GetAddressesByPersonIDAsync(salesPersonID);
        }
    }
}
